#!/usr/bin/env python
# script for controlling bisque usually from an init.d script 
# copy this script to somewhere in your accessible path
import os
import sys
import signal
import optparse
import subprocess 

###
BISQUE_ROOT=os.environ.get('BISQUE_ROOT')
if BISQUE_ROOT is None:
    print >>sys.stderr, 'BISQUE_ROOT not set'
    sys.exit(2)

if not os.path.isdir(BISQUE_ROOT):
    print >>sys.stderr, 'BISQUE_ROOT not a directory'
    sys.exit(2)

## Activate Virtual Env
bin = 'Scripts' if os.name =='nt' else 'bin'
activate = os.path.join(BISQUE_ROOT, 'bqenv', bin, 'activate_this.py')
execfile(activate, dict(__file__=activate))

path = os.environ['PATH']
path = os.path.join(BISQUE_ROOT, 'bqenv', bin) + os.pathsep + path
os.putenv ('PATH', path)
os.environ['PATH'] = path

#from bq.core.command.server_ops import operation
#
#singals = [ signal.SIGHUP, signal.SIGTERM ] 
#for sig in signals:
#    signal.signal(sig, stop_bisque)

if __name__== "__main__":
    #parser = optparse.OptionParser()
    #parser.add_option('-S', '--start', action='store_true', default=False)
    #parser.add_option('-K', '--stop', action='store_true', default=False)

    #options, args = parser.parse_args()
    
    if len(sys.argv) < 2:
        print >>sys.stderr, 'must supply command start|stop'
        sys.exit(2)

    command = ['bq-admin', 'servers', ]
    command.extend (sys.argv[1:])
    proc = subprocess.call (command)

    sys.exit(proc)
        









