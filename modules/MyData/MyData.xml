<?xml version="1.0" encoding="utf-8"?>
<!--  
Module definition for an example module MyData

For details on notation and configuration:
    http://biodev.ece.ucsb.edu/projects/bisquik/wiki/BisqueModuleSpecification
-->
<module name="MyData" path="./MyData" type="python">

    <!-- INPUTS
    Inputs section formally defines all inputs the module 
          will require and templates automated UI renderers
    
    Notes:
    1. "system-input" type is a reserved type for inputs that should be defined by the
       system during the execution
    2. tags with a type of another resource are references and will produce a url to a resource
    2. resources without a user-defined type will have all their data in-place

    Template subtags can configure the interface elements that should be created for 
    elements in inputs, these configs are used by the automated UI generator.
    
    See detailed specs:
        http://biodev.ece.ucsb.edu/projects/bisquik/wiki/BisqueModuleSpecification
    -->           
             
    <tag name="inputs">
        <tag name="mex_url"      type="system-input" />
        <tag name="bisque_token" type="system-input" />

        <tag name="main_resource" type="image" >
            <tag name="template" type="template">
                <!-- Iterable will allow this module to run as a batch -->
                <tag name="iterable" value="iterable-001" />
                
                <tag name="label" value="Select an image or a set of images" />
                <tag name="require_geometry">
                    <tag name="z" value="stack" />
                    <tag name="t" value="single" />
                    <tag name="fail_message" value="Only supports 3D images!" />
                </tag>                
            </tag> 
        </tag> 

        <tag name="image_url"    type="image" >
            <tag name="template" type="template">
                <tag name="label" value="Select input image" />
                <tag name="prohibit_upload" value="true" type="boolean" />
                <tag name="require_geometry">
                    <tag name="z" value="stack" />
                    <tag name="t" value="single" />
                    <tag name="fail_message" value="Only supports 3D images!" />
                </tag>                
            </tag> 
            
            <gobject name="MyGobjects">
                <tag name="template" type="template">
                    <tag name="gobject" value="point" />
                    <tag name="gobject" value="polygon" />
                    <tag name="amount" value="single" />
                    <tag name="fail_message" value="Requires at least one point" />
                </tag> 
            </gobject>
        </tag> 
        
        <tag name="resource_url" type="resource">
            <tag name="template" type="template">
                <tag name="accepted_type" value="image" />
                <tag name="accepted_type" value="dataset" />
                <tag name="label" value="Select input resource" />
            </tag>            
        </tag>   
        
        
        <tag name="my_image" type="image" >
            <tag name="template" type="template">
                <tag name="label" value="Select input image" />
                <tag name="require_geometry">
                    <tag name="t" value="stack" />
                    <tag name="z" value="single" />
                    <tag name="fail_message" value="Only supports time series images!" />
                </tag>                
            </tag> 
            
            <gobject name="MyOtherGobjects">
                <tag name="template" type="template">
                    <tag name="gobject" value="point" />
                    <tag name="gobject" value="polygon" />
                    <tag name="amount" value="many" />
                    <tag name="fail_message" value="Requires at least one point" />
                </tag> 
            </gobject>
        </tag>         
        
        <tag name="radius" value="5.6" type="number" >
            <tag name="template" type="template">
                <tag name="label" value="Radius" />
                <tag name="minValue" value="-10" type="number" />
                <tag name="maxValue" value="33" type="number" />
                <tag name="allowDecimals" value="true" type="boolean" />
                <tag name="decimalPrecision" value="4" type="number" />
                <tag name="step" value="1" type="number" />
                <tag name="units" value="microns" />
            </tag>             
        </tag>

        <tag name="mynumber" type="number" >
            <tag name="template" type="template">
                <tag name="label" value="My number with no default" />
                <tag name="minValue" value="-10" type="number" />
                <tag name="maxValue" value="33" type="number" />
                <tag name="allowDecimals" value="true" type="boolean" />
                <tag name="decimalPrecision" value="4" type="number" />
                <tag name="step" value="1" type="number" />
                <tag name="units" value="microns" />
                <tag name="showSlider" value="false" type="boolean" />
            </tag>             
        </tag>
        
        <tag name="myrange" type="number" >
            <value>5.6</value>
            <value>12</value>
            <value>14</value>                        
            <tag name="template" type="template">
                <tag name="label" value="My multi range" />
                <tag name="minValue" value="-10" type="number" />
                <tag name="maxValue" value="33" type="number" />
                <tag name="allowDecimals" value="true" type="boolean" />
                <tag name="decimalPrecision" value="4" type="number" />
                <tag name="step" value="1" type="number" />
                <tag name="units" value="microns" />
            </tag>             
        </tag>        
        
        <tag name="mystring" value="nothing" type="string" >
            <tag name="template" type="template">
                <tag name="label" value="Some text here" />
                <tag name="minLength" value="0" type="number" />
                <tag name="maxLength" value="100" type="number" />
                <tag name="allowBlank" value="true" type="boolean" />
                <tag name="regex" value="" />
            </tag>             
        </tag>           
        
        <tag name="mycombo" value="choice1" type="combo" >
            <tag name="template" type="template">
                <tag name="label" value="My combo" />
                <tag name="select" value="choice1" />
                <tag name="select" value="choice2" />
                <tag name="select" value="choice3" />
                <tag name="editable" value="false" type="boolean" />             
            </tag>             
        </tag>                

        <tag name="newcombo" value="choice1" type="combo" >
            <tag name="template" type="template">
                <tag name="label" value="New combo" />
                <tag name="select">
                    <value>choice1</value>
                    <value>choice2</value>
                    <value>choice3</value>
                </tag>
                                
                <tag name="editable" value="false" type="boolean" />             
            </tag>             
        </tag>  

        <tag name="mycheck" value="true" type="boolean" >
            <tag name="template" type="template">
                <tag name="label" value="My check" />
            </tag>             
        </tag>        

        <tag name="mydate" type="date" >
            <tag name="template" type="template">
                <tag name="label" value="My date" />
            </tag>             
        </tag>  
        
        <tag name="mytime" type="time" >
            <tag name="template" type="template">
                <tag name="label" value="My time" />
            </tag>             
        </tag>                  
        
    </tag>
    
    <!-- OUTPUTS
    Outputs section formally defines all outputs the module will produce and templates 
    automated UI renderers, the UI options can be specified using templates 
    same way as for elements in inputs 

    Notes:
    1. inputs and outputs are written directly into the MEX and should use distinguishable names
    2. resource with a name indicates data stored directly into the MEX 
    3. tag with a specific type indicates a tag containing a link to the actual resource 
    
    Examples:         
        <gobject name="results" />           - contains resultant gobjects inplace
        <tag name="summary" />               - contains tags inplace
        <tag name="image" type="resource" /> - contains a link (URL) to the resultant resource
    -->  
          
    <tag name="outputs">
         <tag name="MyData" />
         <tag name="MyTable" />         
         <tag name="MyImage" type="image">
             <gobject name="MyAnnotation" />
         </tag>
    </tag>


    <!--  Module parameters and general configuration -->    

    <tag name="module_options" >
        <tag name="version" value="2" />
    </tag>
    
    <tag name="display_options" >
       <tag name="group" value="Generic" />
    </tag>

    <!--  Interface     
    If the interface tag does exist or does not point to a file or a string inplace then the web UI
    will be generated for the module automatically using inputs, outputs and templated interface configs.
    Though interface can still contain configs even if it does provide html interface itself,
    since HTML interface can use default JS components from default module interface and those
    can configure themselves using the interface configuration. -->    

    <!--<tag name="interface" type="file" value="public/index.html" />-->
    

    
    <!-- ENTRY POINTS and/or DESCRIPTIONS
    
    Required entry points currently are:
        help, thumbnail, description, title, authors
    
    Types:
        string - used to specify the returned value inplace
        file   - points to a local file containing the returned value
    -->   
   
    <tag name="help" type="file" value="public/help.html" /> 
    <tag name="thumbnail" type="file" value="public/thumbnail.png" />   

    <tag name="title" value="MyData" /> 
    <tag name="authors" value="The Bisque team" /> 
    <tag name="description" value="This module annotates an image with its embedded metadata." /> 
</module>
